from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext

from Keyboard.reply import default_keyboard
from handlers.Anilibria.main import register_anilibria_handlers
from handlers.Shikimori.main import register_shiki_handlers
from handlers.admin.main import register_admin_handlers


async def send_commands(message: types.Message):

    await message.answer("ok", reply_markup=default_keyboard)


async def about_ru(message: types.message):
    await message.answer(
        "–û–±–æ –º–Ω–µ\n"
        "–Ø –±–æ—Ç –ø–æ–∑–≤–æ–ª—è—é—â–∏–π —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º —Å shikimori,\n"
        "–ò –µ—â–µ —è –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã—Ö–æ–¥–µ –∞–Ω–∏–º–µ –≤ –æ–∑–≤—É—á–∫–∏ Anilibria \n\n"
        "–ö–æ–º–º–∞–Ω–¥—ã:\n\n"
        "1. üîç Anime Search - –ò–¥–µ—Ç –ü–æ–∏—Å–∫ –ø–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É –≤–∞–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–π—Ç–ª–∞, –∏—â–µ—Ç –Ω–∞ Shikimori\n\n"
        "2. üòÅ My Profile - –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ –ø–æ–ø—Ä–æ—Å–∏—Ç —Å–∫–∏–Ω—É—Ç—å –∫–ª—é—á, –∞ –ø–æ—Ç–æ–º –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ "
        "–≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ\n\n"
        "3. üòê Reset Profile - –û—Ç–≤—è–∑—ã–≤–∞–µ—Ç –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ Shikimori –æ—Ç –±–æ—Ç–∞\n\n"
        "4. üìΩ My Watch List, üìÉ My Planned List, ‚òë My Completed List - "
        "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –°–ø–∏—Å–∫–∞—Ö —Å Shikimori \n\n"
        "5. ‚ù§ My Follows - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ê–Ω–∏–º–µ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å(–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –ï—Å–ª–∏ Anilibria "
        "–Ω–∞—á–∞–ª–∞ –æ–∑–≤—É—á–∏–≤–∞—Ç—å –Ω–æ–≤–æ–µ –∞–Ω–∏–º–µ –¥–ª—è –Ω–∏—Ö, –∏–ª–∏ –∂–µ –æ–Ω–≥–æ–∏–Ω–≥)\n\n"
        "6. üíå Follow to Anime - –ò—â–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–∞–π—Ç–ª–∞ –Ω–∞ Anilibria.tv, –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ê–Ω–∏–º–µ –≤–∞–º –±—É–¥–µ—Ç "
        "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ - –ù–∞–π—Ç–∏ –µ–≥–æ –Ω–∞ Shikimori –∏ –æ—Ç–º–µ—Ç–∏—Ç—å –µ–≥–æ, –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≤—ã—Ö–æ–¥ —Å–µ—Ä–∏–π, –ü–æ–ª—É—á–∏—Ç—å Torrent —Ñ–∞–π–ª —Å "
        "–æ–∑–≤—É—á–∫–æ–π Anilibria\n\n"
        "7. ‚¨á Get torrent - –ò—â–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ç–∞–π—Ç–ª–∞ –Ω–∞ Anilibria.tv, –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –ê–Ω–∏–º–µ –≤–∞–º –±—É–¥–µ—Ç "
        "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –¢–æ—Ä—Ä–µ–Ω—Ç –§–∞–π–ª—ã"
    )


async def about_en(message: types.Message):
    await message.answer(
        "About Me\n"
        "I am a bot that allows you to manage your shikimori account,\n"
        "And I can also send notifications about anime releases to Anilibria voiceover, this is only for Russians\n\n"
        "Commands:\n\n"
        "1. üîç Anime Search - Searching for the title you submitted, searching on Shikimori "
        "After clicking on a specific anime, the following actions will be available to you - "
        "add to Scheduled or Watched\n\n"
        "2. üòÅ My Profile - At the first call, it will ask you to throw off the key, and then there will be just "
        "information about your profile\n\n"
        "3. üòê Reset Profile - Unlinks your Shikimori profile from the bot\n\n"
        "4. üìΩ My Watch List, üìÉ My Planned List, ‚òë My Completed List - "
        "Sends information about your Lists from Shikimori \n\n"
        "<b>Other commands, works only in Russian </b>",
        parse_mode='HTML'
    )


async def cancel_handler(message: types.Message, state: FSMContext):
    """This handler allow cancel any states"""
    current_state = await state.get_state()
    if current_state is None:
        return

    await state.finish()
    await message.answer('–û–ö', reply_markup=default_keyboard)


def register_handlers(dp: Dispatcher):
    dp.register_message_handler(send_commands, commands=['commands'])
    dp.register_message_handler(about_ru, commands=['aboutRu'])
    dp.register_message_handler(about_en, commands=['aboutEn'])
    dp.register_message_handler(cancel_handler, commands=['–æ—Ç–º–µ–Ω–∞', 'cancel'], state='*')
    register_shiki_handlers(dp)
    register_anilibria_handlers(dp)
    register_admin_handlers(dp)
