import logging

from aiogram.utils.markdown import hlink
from anilibria import TitleEpisode

from misc.constants import SHIKI_URL


class Message:
    """
    Class, makes message to format we need
    """

    async def notification_msg(self, event: TitleEpisode) -> str:
        """Creates a notification message"""
        try:
            msg = (
                f"<b>{event.title.names.ru} | {event.title.names.en}</b>\n"
                f"<i>–ù–æ–≤–∞—è —Å–µ—Ä–∏—è —É–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞!</i>\n"
                f"<i>–°–µ—Ä–∏—è {event.episode.episode}</i>\n\n"
                f"–ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç —É–≤–ª–µ—á—ë—Ç –≤–∞—Å –≤ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, "
                f"–∞ –≥–µ—Ä–æ–∏ –≤–¥–æ—Ö–Ω–æ–≤—è—Ç –Ω–∞ –Ω–æ–≤—ã–µ —Å–≤–µ—Ä—à–µ–Ω–∏—è. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º! üåüüöÄüì∫\n",
            )
            return msg
        except Exception as e:
            logging.error(f"Error occurred while forming notifications message - {e}")

    async def profile_msg(self, profile: dict) -> str:
        """create a profile message"""
        try:
            anime_stats = profile["stats"]["statuses"]["anime"]
            msg = (
                f"–ù–∏–∫–Ω–µ–π–º - {hlink(profile['nickname'], SHIKI_URL + profile['nickname'])}\n\n"
                f"–í–∞—à–∏ —Å–ø–∏—Å–∫–∏ –Ω–∞ Shikimori:\n"
                f"‚Ä¢ <i>–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ</i> - {anime_stats[0]['size']}\n"
                f"‚Ä¢ <i>–°–º–æ—Ç—Ä—é</i> - {anime_stats[1]['size']}\n"
                f"‚Ä¢ <i>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</i> - {anime_stats[2]['size']}\n"
                f"‚Ä¢ <i>–ë—Ä–æ—à–µ–Ω–æ</i> - {anime_stats[4]['size']}\n\n"
                "–ü—Ä–æ–¥–æ–ª–∂–∞–π –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∞–Ω–∏–º–µ –º–∏—Ä–æ–º –∏ –ø—Ä–∏—è—Ç–Ω—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤! üì∫üåü"
            )

            return msg

        except Exception as e:
            logging.error(f"Error occurred while create profile msg - {e}")

    async def anime_info_rate_msg(self, user_rate: dict, anime_info: dict) -> str:
        """
        create a message for anime info by user_rate
        :param user_rate: User rate from shikimori
        :param anime_info: info about anime from shikimori
        """
        try:
            msg = (
                f"{anime_info['russian']} | {anime_info['name']}\n"
                f"<b>–†–µ–π—Ç–∏–Ω–≥</b>: {anime_info['score']}\n"
                f"<b>–í–∞—à–∞ –û—Ü–µ–Ω–∫–∞</b>: {user_rate['score']}\n"
                f"<b>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</b>: {user_rate['episodes']}: {anime_info['episodes_aired']} \n"
                + hlink("–ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∏–º–µ", SHIKI_URL + anime_info["url"])
            )
            return msg
        except Exception as e:
            logging.error(f"Error occurred while create anime_info_rate message - {e}")

    async def anime_info_msg(self, anime_info: dict) -> str:
        """
        create a message for anime_info
        :param anime_info: info about anime from shikimori
        """
        try:
            msg = (
                f"{anime_info['russian']} | {anime_info['name']}\n"
                f"<b>–†–µ–π—Ç–∏–Ω–≥</b>: {anime_info['score']}\n"
                f"<b>–°—Ç–∞—Ç—É—Å</b>: {anime_info['status']}\n"
                f"<b>–≠–ø–∏–∑–æ–¥–æ–≤</b> : {anime_info['episodes_aired']}\n"
                + hlink("–ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–Ω–∏–º–µ", SHIKI_URL + anime_info["url"])
            )
            return msg
        except Exception as e:
            logging.error(f"Error occurred while create anime_info_rate message - {e}")


message_work = Message()
